pipeline {
    agent { node { label 'Linux-Node' } }
     
  
    stages{
	stage('Docker Image Build'){
		steps{
			sh 'docker build -f gs-spring-boot-docker/Dockerfile -t purusothaman/capstone-project3:pgdevops-${BUILD_NUMBER} .'
		}
	    }
         
        stage('Docker Image Push to DockerHub'){
		steps{
			withCredentials([usernamePassword(credentialsId: 'b8fee6dd-3efa-43be-bdab-6b13f4d16c02', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]){
                    	sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}" 
			sh "docker push purusothaman/capstone-project3:pgdevops-${BUILD_NUMBER}"  
		    	}
		}
	    }	
        stage('Deploying Application in Kubernetes') {
            steps{
                withKubeConfig([credentialsId: '50c1b910-06de-4418-92e6-d636bb510722',
                    serverUrl: 'https://192.168.222.7:6443',
                    namespace: 'default'
                    ]) {
		sh '/bin/bash gs-spring-boot-docker/update_docker_image_deployment_yaml_file.sh ${BUILD_NUMBER}'	
                sh 'kubectl apply -f gs-spring-boot-docker/deploy_k8s.yaml'
                sh 'kubectl apply -f gs-spring-boot-docker/service_k8s.yaml'
                }
            }
         }
    	stage('cleaning up Residual Images in Local System'){
		steps{
			sh 'docker image rmi purusothaman/capstone-project3:pgdevops-${BUILD_NUMBER}'
			sh 'docker image prune -f'
	 		}
		}    	
	}
}
